---
source: src/index/mod.rs
expression: data
input_file: src/index/fixtures/tinyvec-1.5.1.js
---
tinyvec:
  doc: "<code>tinyvec</code> provides 100% safe vec-like data structures."
  t:
    - Trait
    - Struct
    - Struct
    - Struct
    - Struct
    - AssocConst
    - AssocConst
    - Variant
    - Variant
    - Variant
    - Variant
    - Variant
    - Variant
    - AssocType
    - Struct
    - Struct
    - Enum
    - Enum
    - Enum
    - Struct
    - Struct
    - Method
    - Method
    - Method
    - Macro
    - Macro
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Macro
    - Macro
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - StructField
    - StructField
    - StructField
    - StructField
    - StructField
    - StructField
  n:
    - Array
    - ArrayVec
    - ArrayVecDrain
    - ArrayVecIterator
    - ArrayVecSplice
    - CAPACITY
    - CAPACITY
    - Heap
    - Heap
    - Heap
    - Inline
    - Inline
    - Inline
    - Item
    - SliceVec
    - SliceVecDrain
    - TinyVec
    - TinyVecDrain
    - TinyVecIterator
    - TinyVecSplice
    - TryFromSliceError
    - append
    - append
    - append
    - array_vec
    - array_vec
    - as_mut
    - as_mut
    - as_mut
    - as_mut_ptr
    - as_mut_ptr
    - as_mut_ptr
    - as_mut_slice
    - as_mut_slice
    - as_mut_slice
    - as_ptr
    - as_ptr
    - as_ptr
    - as_ref
    - as_ref
    - as_ref
    - as_slice
    - as_slice
    - as_slice
    - as_slice
    - as_slice
    - as_slice
    - as_slice_mut
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - capacity
    - capacity
    - capacity
    - clear
    - clear
    - clear
    - clone
    - clone
    - clone
    - clone_from
    - clone_from
    - clone_into
    - clone_into
    - clone_into
    - cmp
    - cmp
    - cmp
    - count
    - count
    - count
    - default
    - default
    - default
    - default
    - deref
    - deref
    - deref
    - deref_mut
    - deref_mut
    - deref_mut
    - deserialize
    - deserialize
    - drain
    - drain
    - drain
    - drain_to_vec
    - drain_to_vec_and_reserve
    - drop
    - drop
    - drop
    - eq
    - eq
    - eq
    - eq
    - eq
    - eq
    - eq
    - eq
    - extend
    - extend
    - extend
    - extend_from_slice
    - extend_from_slice
    - extend_from_slice
    - fill
    - fill
    - flush
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - for_each
    - for_each
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from_array_empty
    - from_array_len
    - from_array_len
    - from_iter
    - from_iter
    - from_slice_len
    - grab_spare_slice
    - grab_spare_slice
    - grab_spare_slice_mut
    - grab_spare_slice_mut
    - hash
    - hash
    - hash
    - index
    - index
    - index
    - index_mut
    - index_mut
    - index_mut
    - insert
    - insert
    - insert
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into_inner
    - into_iter
    - into_iter
    - into_iter
    - into_iter
    - into_iter
    - into_iter
    - into_iter
    - into_iter
    - into_iter
    - into_iter
    - is_empty
    - is_empty
    - is_empty
    - is_heap
    - is_inline
    - last
    - last
    - last
    - last
    - len
    - len
    - len
    - len
    - len
    - move_to_the_heap
    - move_to_the_heap_and_reserve
    - new
    - new
    - next
    - next
    - next
    - next
    - next
    - next
    - next
    - next_back
    - next_back
    - next_back
    - next_back
    - next_back
    - next_back
    - nth
    - nth
    - nth
    - nth
    - nth_back
    - nth_back
    - nth_back
    - nth_back
    - partial_cmp
    - partial_cmp
    - partial_cmp
    - pop
    - pop
    - pop
    - push
    - push
    - push
    - remove
    - remove
    - remove
    - reserve
    - reserve_exact
    - resize
    - resize
    - resize
    - resize_with
    - resize_with
    - resize_with
    - retain
    - retain
    - retain
    - serialize
    - serialize
    - set_len
    - set_len
    - shrink_to_fit
    - size_hint
    - size_hint
    - size_hint
    - size_hint
    - size_hint
    - size_hint
    - splice
    - splice
    - split_off
    - split_off
    - split_off
    - swap_remove
    - swap_remove
    - swap_remove
    - tiny_vec
    - tiny_vec
    - to_owned
    - to_owned
    - to_owned
    - to_string
    - to_string
    - to_string
    - truncate
    - truncate
    - truncate
    - try_append
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from_array_len
    - try_from_array_len
    - try_from_slice_len
    - try_insert
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_push
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - with_capacity
    - write
    - "0"
    - "0"
    - "0"
    - "0"
    - "0"
    - "0"
  q:
    - tinyvec
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - "tinyvec::TinyVec"
    - ""
    - "tinyvec::TinyVecDrain"
    - ""
    - "tinyvec::TinyVecIterator"
    - ""
  d:
    - A trait for types that are an array.
    - "An array-backed, vector-like data structure."
    - Draining iterator for <code>ArrayVec</code>
    - Iterator for consuming an <code>ArrayVec</code> and returning owned …
    - "Splicing iterator for <code>ArrayVec</code> See <code>ArrayVec::splice</code>"
    - The number of slots in the thing.
    - The number of slots in the thing.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - The type of the items in the thing.
    - A slice-backed vector-like data structure.
    - Draining iterator for <code>SliceVec</code>
    - "A vector that starts inline, but can automatically move to …"
    - Draining iterator for <code>TinyVecDrain</code>
    - Iterator for consuming an <code>TinyVec</code> and returning owned …
    - "Splicing iterator for <code>TinyVec</code> See <code>TinyVec::splice</code>"
    - The error type returned when a conversion from a slice to …
    - Move all values from <code>other</code> into this vec.
    - ""
    - Move all values from <code>other</code> into this vec.
    - Helper to make an <code>ArrayVec</code>.
    - Helper to make an <code>ArrayVec</code>.
    - ""
    - ""
    - ""
    - A <code>*mut</code> pointer to the backing array.
    - A <code>*mut</code> pointer to the backing slice.
    - A mutable pointer to the backing array.
    - "Performs a <code>deref_mut</code>, into unique slice form."
    - "Performs a <code>deref_mut</code>, into unique slice form."
    - Helper for getting the mut slice.
    - A <code>*const</code> pointer to the backing array.
    - A <code>*const</code> pointer to the backing slice.
    - A const pointer to the backing array.
    - ""
    - ""
    - ""
    - Gives a shared slice over the whole thing.
    - "Performs a <code>deref</code>, into shared slice form."
    - Returns the remaining items of this iterator as a slice.
    - "Performs a <code>deref</code>, into shared slice form."
    - Helper for getting the shared slice.
    - Returns the remaining items of this iterator as a slice.
    - Gives a unique slice over the whole thing.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - The capacity of the <code>ArrayVec</code>.
    - The capacity of the <code>SliceVec</code>.
    - The capacity of the <code>TinyVec</code>.
    - Truncates the <code>ArrayVec</code> down to length 0.
    - Truncates the <code>SliceVec</code> down to length 0.
    - Removes all elements from the vec.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - "Create a default-initialized instance of ourself, similar …"
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Creates a draining iterator that removes the specified …
    - Creates a draining iterator that removes the specified …
    - Creates a draining iterator that removes the specified …
    - Drains all elements to a Vec
    - "Drains all elements to a Vec, but reserves additional space"
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Clone each element of the slice into this <code>ArrayVec</code>.
    - ""
    - Clone each element of the slice into this vec.
    - Fill the vector until its capacity has been reached.
    - Fill the vector until its capacity has been reached.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - The output has a length equal to the full array.
    - ""
    - ""
    - ""
    - ""
    - "Calls <code>AsRef::as_mut</code> then uses the full slice as the …"
    - ""
    - Uses the full slice as the initial length.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Wraps up an array as a new empty <code>ArrayVec</code>.
    - Wraps up an array and uses the given length as the initial …
    - Wraps up an array and uses the given length as the initial …
    - ""
    - ""
    - Wraps up a slice and uses the given length as the initial …
    - Obtain the shared slice of the array <em>after</em> the active …
    - Obtain the shared slice of the array <em>after</em> the active …
    - Obtain the mutable slice of the array <em>after</em> the active …
    - Obtain the mutable slice of the array <em>after</em> the active …
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - "Inserts an item at the position given, moving all …"
    - "Inserts an item at the position given, moving all …"
    - "Inserts an item at the position given, moving all …"
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Returns the inner array of the <code>ArrayVec</code>.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Checks if the length is 0.
    - Checks if the length is 0.
    - If the vec is empty.
    - Returns whether elements are on heap
    - Returns whether elements are on stack
    - ""
    - ""
    - ""
    - ""
    - The length of the <code>ArrayVec</code> (in elements).
    - ""
    - The length of the <code>SliceVec</code> (in elements).
    - The length of the vec (in elements).
    - ""
    - "Moves the content of the TinyVec to the heap, if it’s …"
    - "If TinyVec is inline, moves the content of it to the heap. …"
    - "Makes a new, empty <code>ArrayVec</code>."
    - "Makes a new, empty vec."
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - "Remove and return the last element of the vec, if there is …"
    - "Remove and return the last element of the vec, if there is …"
    - "Remove and return the last element of the vec, if there is …"
    - Place an element onto the end of the vec.
    - Place an element onto the end of the vec.
    - Place an element onto the end of the vec.
    - "Removes the item at <code>index</code>, shifting all others down by one …"
    - "Removes the item at <code>index</code>, shifting all others down by one …"
    - "Removes the item at <code>index</code>, shifting all others down by one …"
    - Reserves additional space. Moves to the heap if array can…
    - Reserves additional space. Moves to the heap if array can…
    - As <code>resize_with</code> and it clones the value as the closure.
    - As <code>resize_with</code> and it clones the value as the closure.
    - Resize the vec to the new length.
    - Resize the vec to the new length.
    - Resize the vec to the new length.
    - Resize the vec to the new length.
    - Walk the vec and keep only the elements that pass the …
    - Walk the vec and keep only the elements that pass the …
    - Walk the vec and keep only the elements that pass the …
    - ""
    - ""
    - Forces the length of the vector to <code>new_len</code>.
    - Forces the length of the vector to <code>new_len</code>.
    - Shrinks the capacity of the vector as much as possible. It …
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Creates a splicing iterator that removes the specified …
    - Creates a splicing iterator that removes the specified …
    - Splits the collection at the point given.
    - Splits the collection at the point given.
    - Splits the collection at the point given.
    - "Remove an element, swapping the end of the vec into its …"
    - "Remove an element, swapping the end of the vec into its …"
    - "Remove an element, swapping the end of the vec into its …"
    - Helper to make a <code>TinyVec</code>.
    - Helper to make a <code>TinyVec</code>.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Reduces the vec’s length to the given value.
    - Reduces the vec’s length to the given value.
    - Reduces the vec’s length to the given value.
    - Move all values from <code>other</code> into this vec. If appending …
    - ""
    - "The output has a length equal to that of the slice, with …"
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - "Wraps an array, using the given length as the starting …"
    - "Wraps an array, using the given length as the starting …"
    - "Wraps a slice, using the given length as the starting …"
    - "Tries to insert an item at the position given, moving all …"
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Tries to place an element onto the end of the vec. Returns …
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Makes a new TinyVec with <em>at least</em> the given capacity.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
  i:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 2
    - 3
    - 4
    - 2
    - 3
    - 4
    - 1
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 5
    - 6
    - 2
    - 0
    - 0
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 1
    - 5
    - 7
    - 6
    - 2
    - 4
    - 1
    - 5
    - 5
    - 8
    - 7
    - 9
    - 6
    - 6
    - 10
    - 2
    - 2
    - 3
    - 11
    - 4
    - 12
    - 5
    - 5
    - 8
    - 7
    - 9
    - 6
    - 6
    - 10
    - 2
    - 2
    - 3
    - 11
    - 4
    - 12
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 2
    - 12
    - 5
    - 2
    - 5
    - 2
    - 12
    - 5
    - 6
    - 2
    - 7
    - 3
    - 4
    - 1
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 2
    - 5
    - 6
    - 2
    - 5
    - 5
    - 8
    - 10
    - 11
    - 5
    - 5
    - 5
    - 6
    - 6
    - 2
    - 2
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 7
    - 6
    - 6
    - 6
    - 6
    - 6
    - 6
    - 6
    - 6
    - 6
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 4
    - 12
    - 9
    - 3
    - 5
    - 5
    - 8
    - 7
    - 9
    - 6
    - 6
    - 6
    - 10
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 3
    - 11
    - 4
    - 12
    - 5
    - 5
    - 2
    - 5
    - 2
    - 6
    - 5
    - 6
    - 5
    - 6
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 8
    - 7
    - 9
    - 6
    - 10
    - 2
    - 3
    - 11
    - 4
    - 12
    - 5
    - 5
    - 8
    - 7
    - 9
    - 6
    - 10
    - 2
    - 3
    - 11
    - 4
    - 5
    - 6
    - 2
    - 2
    - 2
    - 7
    - 9
    - 3
    - 4
    - 5
    - 8
    - 6
    - 2
    - 11
    - 2
    - 2
    - 5
    - 2
    - 8
    - 7
    - 9
    - 10
    - 3
    - 11
    - 4
    - 8
    - 7
    - 9
    - 3
    - 11
    - 4
    - 7
    - 9
    - 3
    - 4
    - 7
    - 9
    - 3
    - 4
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 2
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 2
    - 5
    - 6
    - 2
    - 8
    - 7
    - 9
    - 3
    - 11
    - 4
    - 5
    - 2
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 0
    - 0
    - 5
    - 2
    - 12
    - 5
    - 6
    - 2
    - 5
    - 6
    - 2
    - 5
    - 5
    - 5
    - 8
    - 7
    - 9
    - 6
    - 10
    - 2
    - 3
    - 11
    - 4
    - 12
    - 5
    - 2
    - 6
    - 5
    - 5
    - 8
    - 7
    - 9
    - 6
    - 10
    - 2
    - 3
    - 11
    - 4
    - 12
    - 5
    - 5
    - 8
    - 7
    - 9
    - 6
    - 10
    - 2
    - 3
    - 11
    - 4
    - 12
    - 2
    - 2
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
  p:
    - - Trait
      - Array
    - - Enum
      - TinyVec
    - - Enum
      - TinyVecDrain
    - - Enum
      - TinyVecIterator
    - - Struct
      - ArrayVec
    - - Struct
      - SliceVec
    - - Struct
      - ArrayVecIterator
    - - Struct
      - ArrayVecSplice
    - - Struct
      - ArrayVecDrain
    - - Struct
      - SliceVecDrain
    - - Struct
      - TinyVecSplice
    - - Struct
      - TryFromSliceError
    - - Variant
      - Inline
    - - Variant
      - Heap
    - - Variant
      - Inline
    - - Variant
      - Heap
    - - Variant
      - Inline
    - - Variant
      - Heap

