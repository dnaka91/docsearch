---
source: src/index/mod.rs
expression: data
input_file: src/index/fixtures/anyhow-1.0.30.js
---
anyhow:
  doc: "![github] ![crates-io] ![docs-rs]"
  t:
    - Struct
    - Struct
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Typedef
    - Trait
    - TyMethod
    - TyMethod
    - Macro
    - Macro
    - Macro
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
  n:
    - Error
    - Chain
    - new
    - new
    - msg
    - context
    - backtrace
    - chain
    - root_cause
    - is
    - downcast
    - downcast_ref
    - downcast_mut
    - Result
    - Context
    - context
    - with_context
    - bail
    - ensure
    - anyhow
    - from
    - from
    - into
    - to_string
    - try_from
    - try_into
    - borrow
    - borrow_mut
    - type_id
    - from
    - into
    - into_iter
    - to_owned
    - clone_into
    - try_from
    - try_into
    - borrow
    - borrow_mut
    - type_id
    - drop
    - as_ref
    - as_ref
    - from
    - next_back
    - len
    - next
    - size_hint
    - clone
    - default
    - deref
    - deref_mut
    - fmt
    - fmt
  q:
    0: anyhow
  d:
    - "The `Error` type, a wrapper around a dynamic error type."
    - Iterator of a chain of source errors.
    - ""
    - Create a new error object from any error type.
    - Create a new error object from a printable error message.
    - Wrap the error value with additional context.
    - Get the backtrace for this Error.
    - An iterator of the chain of source errors contained by…
    - "The lowest level cause of this error — this error's…"
    - "Returns true if `E` is the type held by this error object."
    - Attempt to downcast the error object to a concrete type.
    - Downcast this error object by reference.
    - Downcast this error object by mutable reference.
    - "`Result<T, Error>`"
    - "Provides the `context` method for `Result`."
    - Wrap the error value with additional context.
    - Wrap the error value with additional context that is…
    - Return early with an error.
    - Return early with an error if a condition is not satisfied.
    - Construct an ad-hoc error from a string.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
  i:
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 0
    - 0
    - 2
    - 2
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
  p:
    - - Struct
      - Chain
    - - Struct
      - Error
    - - Trait
      - Context

