---
source: src/index/mod.rs
expression: data
input_file: src/index/fixtures/cargo-1.0.163.js
---
serde:
  doc: Serde
  t:
    - Trait
    - ProcDerive
    - Trait
    - AssocType
    - AssocType
    - AssocType
    - Trait
    - ProcDerive
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - Trait
    - Method
    - Method
    - Method
    - Module
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Macro
    - Method
    - Method
    - Module
    - Macro
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Variant
    - Variant
    - Variant
    - Trait
    - Trait
    - Trait
    - Trait
    - AssocType
    - Variant
    - Trait
    - Trait
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - Trait
    - Variant
    - Struct
    - Trait
    - Variant
    - Trait
    - Variant
    - Variant
    - Variant
    - Variant
    - Variant
    - Trait
    - Variant
    - Import
    - Variant
    - Variant
    - Variant
    - Enum
    - Variant
    - Variant
    - Variant
    - AssocType
    - AssocType
    - AssocType
    - Trait
    - Trait
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - Method
    - TyMethod
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - TyMethod
    - Method
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - Method
    - Method
    - TyMethod
    - Method
    - Method
    - Module
    - Method
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Struct
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Trait
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - Struct
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - AssocType
    - Trait
    - Trait
    - AssocType
    - Trait
    - AssocType
    - Trait
    - AssocType
    - Trait
    - AssocType
    - Trait
    - AssocType
    - Trait
    - AssocType
    - Trait
    - AssocType
    - Trait
    - Import
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - Method
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - TyMethod
    - Method
    - Method
    - Method
    - Method
    - Method
    - Method
  n:
    - Deserialize
    - Deserialize
    - Deserializer
    - Error
    - Error
    - Ok
    - Serialize
    - Serialize
    - SerializeMap
    - SerializeSeq
    - SerializeStruct
    - SerializeStructVariant
    - SerializeTuple
    - SerializeTupleStruct
    - SerializeTupleVariant
    - Serializer
    - collect_map
    - collect_seq
    - collect_str
    - de
    - deserialize
    - deserialize_any
    - deserialize_bool
    - deserialize_byte_buf
    - deserialize_bytes
    - deserialize_char
    - deserialize_enum
    - deserialize_f32
    - deserialize_f64
    - deserialize_i128
    - deserialize_i16
    - deserialize_i32
    - deserialize_i64
    - deserialize_i8
    - deserialize_identifier
    - deserialize_ignored_any
    - deserialize_map
    - deserialize_newtype_struct
    - deserialize_option
    - deserialize_seq
    - deserialize_str
    - deserialize_string
    - deserialize_struct
    - deserialize_tuple
    - deserialize_tuple_struct
    - deserialize_u128
    - deserialize_u16
    - deserialize_u32
    - deserialize_u64
    - deserialize_u8
    - deserialize_unit
    - deserialize_unit_struct
    - forward_to_deserialize_any
    - is_human_readable
    - is_human_readable
    - ser
    - serde_if_integer128
    - serialize
    - serialize_bool
    - serialize_bytes
    - serialize_char
    - serialize_f32
    - serialize_f64
    - serialize_i128
    - serialize_i16
    - serialize_i32
    - serialize_i64
    - serialize_i8
    - serialize_map
    - serialize_newtype_struct
    - serialize_newtype_variant
    - serialize_none
    - serialize_seq
    - serialize_some
    - serialize_str
    - serialize_struct
    - serialize_struct_variant
    - serialize_tuple
    - serialize_tuple_struct
    - serialize_tuple_variant
    - serialize_u128
    - serialize_u16
    - serialize_u32
    - serialize_u64
    - serialize_u8
    - serialize_unit
    - serialize_unit_struct
    - serialize_unit_variant
    - Bool
    - Bytes
    - Char
    - Deserialize
    - DeserializeOwned
    - DeserializeSeed
    - Deserializer
    - Deserializer
    - Enum
    - EnumAccess
    - Error
    - Error
    - Error
    - Error
    - Error
    - Error
    - Expected
    - Float
    - IgnoredAny
    - IntoDeserializer
    - Map
    - MapAccess
    - NewtypeStruct
    - NewtypeVariant
    - Option
    - Other
    - Seq
    - SeqAccess
    - Signed
    - StdError
    - Str
    - StructVariant
    - TupleVariant
    - Unexpected
    - Unit
    - UnitVariant
    - Unsigned
    - Value
    - Value
    - Variant
    - VariantAccess
    - Visitor
    - borrow
    - borrow
    - borrow_mut
    - borrow_mut
    - clone
    - clone
    - clone_into
    - clone_into
    - custom
    - default
    - deserialize
    - deserialize
    - deserialize
    - deserialize_any
    - deserialize_bool
    - deserialize_byte_buf
    - deserialize_bytes
    - deserialize_char
    - deserialize_enum
    - deserialize_f32
    - deserialize_f64
    - deserialize_i128
    - deserialize_i16
    - deserialize_i32
    - deserialize_i64
    - deserialize_i8
    - deserialize_identifier
    - deserialize_ignored_any
    - deserialize_map
    - deserialize_newtype_struct
    - deserialize_option
    - deserialize_seq
    - deserialize_str
    - deserialize_string
    - deserialize_struct
    - deserialize_tuple
    - deserialize_tuple_struct
    - deserialize_u128
    - deserialize_u16
    - deserialize_u32
    - deserialize_u64
    - deserialize_u8
    - deserialize_unit
    - deserialize_unit_struct
    - duplicate_field
    - eq
    - expecting
    - expecting
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - from
    - from
    - into
    - into
    - into_deserializer
    - invalid_length
    - invalid_type
    - invalid_value
    - is_human_readable
    - missing_field
    - newtype_variant
    - newtype_variant_seed
    - next_element
    - next_element_seed
    - next_entry
    - next_entry_seed
    - next_key
    - next_key_seed
    - next_value
    - next_value_seed
    - size_hint
    - size_hint
    - struct_variant
    - to_owned
    - to_owned
    - to_string
    - try_from
    - try_from
    - try_into
    - try_into
    - tuple_variant
    - type_id
    - type_id
    - unit_variant
    - unknown_field
    - unknown_variant
    - value
    - variant
    - variant_seed
    - visit_bool
    - visit_bool
    - visit_borrowed_bytes
    - visit_borrowed_str
    - visit_byte_buf
    - visit_bytes
    - visit_bytes
    - visit_char
    - visit_enum
    - visit_enum
    - visit_f32
    - visit_f64
    - visit_f64
    - visit_i128
    - visit_i128
    - visit_i16
    - visit_i32
    - visit_i64
    - visit_i64
    - visit_i8
    - visit_map
    - visit_map
    - visit_newtype_struct
    - visit_newtype_struct
    - visit_none
    - visit_none
    - visit_seq
    - visit_seq
    - visit_some
    - visit_some
    - visit_str
    - visit_str
    - visit_string
    - visit_u128
    - visit_u128
    - visit_u16
    - visit_u32
    - visit_u64
    - visit_u64
    - visit_u8
    - visit_unit
    - visit_unit
    - BoolDeserializer
    - BorrowedBytesDeserializer
    - BorrowedStrDeserializer
    - BytesDeserializer
    - CharDeserializer
    - CowStrDeserializer
    - EnumAccessDeserializer
    - Error
    - F32Deserializer
    - F64Deserializer
    - I128Deserializer
    - I16Deserializer
    - I32Deserializer
    - I64Deserializer
    - I8Deserializer
    - IsizeDeserializer
    - MapAccessDeserializer
    - MapDeserializer
    - SeqAccessDeserializer
    - SeqDeserializer
    - StrDeserializer
    - StringDeserializer
    - U128Deserializer
    - U16Deserializer
    - U32Deserializer
    - U64Deserializer
    - U8Deserializer
    - UnitDeserializer
    - UsizeDeserializer
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - borrow_mut
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - clone_into
    - custom
    - custom
    - description
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_any
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_bool
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_byte_buf
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_bytes
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_char
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_enum
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f32
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_f64
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i128
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i16
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i32
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i64
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_i8
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_identifier
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_ignored_any
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_map
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_newtype_struct
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_option
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_seq
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_str
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_string
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_struct
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_tuple_struct
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u128
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u16
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u32
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u64
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_u8
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - deserialize_unit_struct
    - end
    - end
    - eq
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - fmt
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - from
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - into
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - new
    - next_element_seed
    - next_element_seed
    - next_entry_seed
    - next_key_seed
    - next_value_seed
    - provide
    - size_hint
    - size_hint
    - size_hint
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_owned
    - to_string
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_from
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - try_into
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - type_id
    - variant_seed
    - variant_seed
    - variant_seed
    - variant_seed
    - variant_seed
    - variant_seed
    - Error
    - Error
    - Error
    - Error
    - Error
    - Error
    - Error
    - Error
    - Error
    - Impossible
    - Ok
    - Ok
    - Ok
    - Ok
    - Ok
    - Ok
    - Ok
    - Ok
    - Serialize
    - SerializeMap
    - SerializeMap
    - SerializeSeq
    - SerializeSeq
    - SerializeStruct
    - SerializeStruct
    - SerializeStructVariant
    - SerializeStructVariant
    - SerializeTuple
    - SerializeTuple
    - SerializeTupleStruct
    - SerializeTupleStruct
    - SerializeTupleVariant
    - SerializeTupleVariant
    - Serializer
    - StdError
    - borrow
    - borrow_mut
    - collect_map
    - collect_seq
    - collect_str
    - custom
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - end
    - from
    - into
    - is_human_readable
    - serialize
    - serialize_bool
    - serialize_bytes
    - serialize_char
    - serialize_element
    - serialize_element
    - serialize_element
    - serialize_element
    - serialize_entry
    - serialize_f32
    - serialize_f64
    - serialize_field
    - serialize_field
    - serialize_field
    - serialize_field
    - serialize_field
    - serialize_field
    - serialize_field
    - serialize_field
    - serialize_i128
    - serialize_i16
    - serialize_i32
    - serialize_i64
    - serialize_i8
    - serialize_key
    - serialize_key
    - serialize_map
    - serialize_newtype_struct
    - serialize_newtype_variant
    - serialize_none
    - serialize_seq
    - serialize_some
    - serialize_str
    - serialize_struct
    - serialize_struct_variant
    - serialize_tuple
    - serialize_tuple_struct
    - serialize_tuple_variant
    - serialize_u128
    - serialize_u16
    - serialize_u32
    - serialize_u64
    - serialize_u8
    - serialize_unit
    - serialize_unit_struct
    - serialize_unit_variant
    - serialize_value
    - serialize_value
    - skip_field
    - skip_field
    - try_from
    - try_into
    - type_id
  q:
    0: serde
    88: "serde::de"
    265: "serde::de::value"
    1532: "serde::ser"
  d:
    - A <strong>data structure</strong> that can be deserialized from any data …
    - Derive macro available if serde is built with …
    - A <strong>data format</strong> that can deserialize any data structure …
    - The error type that can be returned if some error occurs …
    - The error type when some error occurs during serialization.
    - The output type produced by this <code>Serializer</code> during …
    - A <strong>data structure</strong> that can be serialized into any data …
    - Derive macro available if serde is built with …
    - Type returned from <code>serialize_map</code> for serializing the …
    - Type returned from <code>serialize_seq</code> for serializing the …
    - Type returned from <code>serialize_struct</code> for serializing the …
    - Type returned from <code>serialize_struct_variant</code> for …
    - Type returned from <code>serialize_tuple</code> for serializing the …
    - Type returned from <code>serialize_tuple_struct</code> for serializing …
    - Type returned from <code>serialize_tuple_variant</code> for serializing …
    - A <strong>data format</strong> that can serialize any data structure …
    - Collect an iterator as a map.
    - Collect an iterator as a sequence.
    - Serialize a string produced by an implementation of <code>Display</code>…
    - Generic data structure deserialization framework.
    - Deserialize this value from the given Serde deserializer.
    - Require the <code>Deserializer</code> to figure out how to drive the …
    - Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a byte array …
    - Hint that the <code>Deserialize</code> type is expecting a byte array …
    - Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an enum value …
    - Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.
    - Hint that the <code>Deserialize</code> type is expecting the name of a …
    - Hint that the <code>Deserialize</code> type needs to deserialize a …
    - Hint that the <code>Deserialize</code> type is expecting a map of …
    - Hint that the <code>Deserialize</code> type is expecting a newtype …
    - Hint that the <code>Deserialize</code> type is expecting an optional …
    - Hint that the <code>Deserialize</code> type is expecting a sequence of …
    - Hint that the <code>Deserialize</code> type is expecting a string value …
    - Hint that the <code>Deserialize</code> type is expecting a string value …
    - Hint that the <code>Deserialize</code> type is expecting a struct with …
    - Hint that the <code>Deserialize</code> type is expecting a sequence of …
    - Hint that the <code>Deserialize</code> type is expecting a tuple struct …
    - Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a unit value.
    - Hint that the <code>Deserialize</code> type is expecting a unit struct …
    - Helper macro when implementing the <code>Deserializer</code> part of a …
    - Determine whether <code>Deserialize</code> implementations should …
    - Determine whether <code>Serialize</code> implementations should …
    - Generic data structure serialization framework.
    - Conditional compilation depending on whether Serde is …
    - Serialize this value into the given Serde serializer.
    - Serialize a <code>bool</code> value.
    - Serialize a chunk of raw byte data.
    - Serialize a character.
    - Serialize an <code>f32</code> value.
    - Serialize an <code>f64</code> value.
    - Serialize an <code>i128</code> value.
    - Serialize an <code>i16</code> value.
    - Serialize an <code>i32</code> value.
    - Serialize an <code>i64</code> value.
    - Serialize an <code>i8</code> value.
    - Begin to serialize a map. This call must be followed by …
    - Serialize a newtype struct like <code>struct Millimeters(u8)</code>.
    - "Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>."
    - Serialize a <code>None</code> value.
    - Begin to serialize a variably sized sequence. This call …
    - Serialize a <code>Some(T)</code> value.
    - Serialize a <code>&amp;str</code>.
    - Begin to serialize a struct like …
    - "Begin to serialize a struct variant like <code>E::S</code> in …"
    - Begin to serialize a statically sized sequence whose …
    - Begin to serialize a tuple struct like …
    - "Begin to serialize a tuple variant like <code>E::T</code> in …"
    - Serialize a <code>u128</code> value.
    - Serialize a <code>u16</code> value.
    - Serialize a <code>u32</code> value.
    - Serialize a <code>u64</code> value.
    - Serialize a <code>u8</code> value.
    - Serialize a <code>()</code> value.
    - Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.
    - "Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>."
    - The input contained a boolean value that was not expected.
    - "The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …"
    - The input contained a <code>char</code> that was not expected.
    - A <strong>data structure</strong> that can be deserialized from any data …
    - A data structure that can be deserialized without …
    - "<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …"
    - A <strong>data format</strong> that can deserialize any data structure …
    - The type of the deserializer being converted into.
    - The input contained an enum that was not expected.
    - Provides a <code>Visitor</code> access to the data of an enum in the …
    - The <code>Error</code> trait allows <code>Deserialize</code> implementations to …
    - The error type that can be returned if some error occurs …
    - The error type that can be returned if some error occurs …
    - The error type that can be returned if some error occurs …
    - The error type that can be returned if some error occurs …
    - The error type that can be returned if some error occurs …
    - "<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …"
    - The input contained a floating point <code>f32</code> or <code>f64</code> that was …
    - An efficient way of discarding data from a deserializer.
    - Converts an existing value into a <code>Deserializer</code> from which …
    - The input contained a map that was not expected.
    - Provides a <code>Visitor</code> access to each entry of a map in the …
    - The input contained a newtype struct that was not expected.
    - The input contained a newtype variant that was not …
    - The input contained an <code>Option&lt;T&gt;</code> that was not expected.
    - A message stating what uncategorized thing the input …
    - The input contained a sequence that was not expected.
    - Provides a <code>Visitor</code> access to each element of a sequence in …
    - "The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …"
    - ""
    - The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.
    - The input contained a struct variant that was not expected.
    - The input contained a tuple variant that was not expected.
    - "<code>Unexpected</code> represents an unexpected invocation of any one …"
    - The input contained a unit <code>()</code> that was not expected.
    - The input contained a unit variant that was not expected.
    - "The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…"
    - The type produced by using this seed.
    - The value produced by this visitor.
    - The <code>Visitor</code> that will be used to deserialize the content …
    - "<code>VariantAccess</code> is a visitor that is created by the …"
    - This trait represents a visitor that walks through a …
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Raised when there is general error when deserializing a …
    - ""
    - Deserialize this value from the given Serde deserializer.
    - "Equivalent to the more common <code>Deserialize::deserialize</code> …"
    - ""
    - Require the <code>Deserializer</code> to figure out how to drive the …
    - Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a byte array …
    - Hint that the <code>Deserialize</code> type is expecting a byte array …
    - Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an enum value …
    - Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.
    - Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.
    - Hint that the <code>Deserialize</code> type is expecting the name of a …
    - Hint that the <code>Deserialize</code> type needs to deserialize a …
    - Hint that the <code>Deserialize</code> type is expecting a map of …
    - Hint that the <code>Deserialize</code> type is expecting a newtype …
    - Hint that the <code>Deserialize</code> type is expecting an optional …
    - Hint that the <code>Deserialize</code> type is expecting a sequence of …
    - Hint that the <code>Deserialize</code> type is expecting a string value …
    - Hint that the <code>Deserialize</code> type is expecting a string value …
    - Hint that the <code>Deserialize</code> type is expecting a struct with …
    - Hint that the <code>Deserialize</code> type is expecting a sequence of …
    - Hint that the <code>Deserialize</code> type is expecting a tuple struct …
    - Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.
    - Hint that the <code>Deserialize</code> type is expecting a unit value.
    - Hint that the <code>Deserialize</code> type is expecting a unit struct …
    - Raised when a <code>Deserialize</code> struct type received more than …
    - ""
    - Format a message stating what data this Visitor expects to …
    - ""
    - Format an explanation of what data was being expected. …
    - ""
    - ""
    - ""
    - ""
    - ""
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - Convert this value into a deserializer.
    - Raised when deserializing a sequence or map and the input …
    - Raised when a <code>Deserialize</code> receives a type different from …
    - Raised when a <code>Deserialize</code> receives a value of the right …
    - Determine whether <code>Deserialize</code> implementations should …
    - Raised when a <code>Deserialize</code> struct type expected to receive …
    - Called when deserializing a variant with a single value.
    - Called when deserializing a variant with a single value.
    - This returns <code>Ok(Some(value))</code> for the next value in the …
    - This returns <code>Ok(Some(value))</code> for the next value in the …
    - "This returns <code>Ok(Some((key, value)))</code> for the next …"
    - "This returns <code>Ok(Some((key, value)))</code> for the next …"
    - "This returns <code>Ok(Some(key))</code> for the next key in the map, or …"
    - "This returns <code>Ok(Some(key))</code> for the next key in the map, or …"
    - This returns a <code>Ok(value)</code> for the next value in the map.
    - This returns a <code>Ok(value)</code> for the next value in the map.
    - "Returns the number of elements remaining in the sequence, …"
    - "Returns the number of entries remaining in the map, if …"
    - Called when deserializing a struct-like variant.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Called when deserializing a tuple-like variant.
    - ""
    - ""
    - Called when deserializing a variant with no values.
    - Raised when a <code>Deserialize</code> struct type received a field …
    - Raised when a <code>Deserialize</code> enum type received a variant …
    - Building blocks for deserializing basic values using the …
    - "<code>variant</code> is called to identify which variant to deserialize."
    - "<code>variant</code> is called to identify which variant to deserialize."
    - The input contains a boolean.
    - ""
    - The input contains a byte array that lives at least as …
    - The input contains a string that lives at least as long as …
    - The input contains a byte array and ownership of the byte …
    - The input contains a byte array. The lifetime of the byte …
    - ""
    - The input contains a <code>char</code>.
    - The input contains an enum.
    - ""
    - The input contains an <code>f32</code>.
    - The input contains an <code>f64</code>.
    - ""
    - The input contains a <code>i128</code>.
    - ""
    - The input contains an <code>i16</code>.
    - The input contains an <code>i32</code>.
    - The input contains an <code>i64</code>.
    - ""
    - The input contains an <code>i8</code>.
    - The input contains a key-value map.
    - ""
    - The input contains a newtype struct.
    - ""
    - The input contains an optional that is absent.
    - ""
    - The input contains a sequence of elements.
    - ""
    - The input contains an optional that is present.
    - ""
    - The input contains a string. The lifetime of the string is …
    - ""
    - The input contains a string and ownership of the string is …
    - The input contains a <code>u128</code>.
    - ""
    - The input contains a <code>u16</code>.
    - The input contains a <code>u32</code>.
    - The input contains a <code>u64</code>.
    - ""
    - The input contains a <code>u8</code>.
    - The input contains a unit <code>()</code>.
    - ""
    - A deserializer holding a <code>bool</code>.
    - "A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …"
    - A deserializer holding a <code>&amp;str</code> with a lifetime tied to …
    - "A deserializer holding a <code>&amp;[u8]</code>. Always calls …"
    - A deserializer holding a <code>char</code>.
    - A deserializer holding a <code>Cow&lt;str&gt;</code>.
    - A deserializer holding an <code>EnumAccess</code>.
    - A minimal representation of all possible errors that can …
    - A deserializer holding an <code>f32</code>.
    - A deserializer holding an <code>f64</code>.
    - A deserializer holding an <code>i128</code>.
    - A deserializer holding an <code>i16</code>.
    - A deserializer holding an <code>i32</code>.
    - A deserializer holding an <code>i64</code>.
    - A deserializer holding an <code>i8</code>.
    - A deserializer holding an <code>isize</code>.
    - A deserializer holding a <code>MapAccess</code>.
    - A deserializer that iterates over a map.
    - A deserializer holding a <code>SeqAccess</code>.
    - A deserializer that iterates over a sequence.
    - A deserializer holding a <code>&amp;str</code>.
    - A deserializer holding a <code>String</code>.
    - A deserializer holding a <code>u128</code>.
    - A deserializer holding a <code>u16</code>.
    - A deserializer holding a <code>u32</code>.
    - A deserializer holding a <code>u64</code>.
    - A deserializer holding a <code>u8</code>.
    - A deserializer holding a <code>()</code>.
    - A deserializer holding a <code>usize</code>.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Check for remaining elements after passing a …
    - Check for remaining elements after passing a …
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - Returns the argument unchanged.
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - "Calls <code>U::from(self)</code>."
    - ""
    - ""
    - ""
    - Create a new borrowed deserializer from the given string.
    - ""
    - ""
    - Create a new deserializer from the given bytes.
    - Create a new borrowed deserializer from the given borrowed …
    - "Construct a new <code>MapDeserializer&lt;I, E&gt;</code>."
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - "Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>."
    - Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.
    - Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.
    - Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Trait used by <code>Serialize</code> implementations to generically …
    - The error type when some error occurs during serialization.
    - Must match the <code>Error</code> type of our <code>Serializer</code>.
    - Must match the <code>Error</code> type of our <code>Serializer</code>.
    - Must match the <code>Error</code> type of our <code>Serializer</code>.
    - Must match the <code>Error</code> type of our <code>Serializer</code>.
    - Must match the <code>Error</code> type of our <code>Serializer</code>.
    - Must match the <code>Error</code> type of our <code>Serializer</code>.
    - Must match the <code>Error</code> type of our <code>Serializer</code>.
    - Helper type for implementing a <code>Serializer</code> that does not …
    - The output type produced by this <code>Serializer</code> during …
    - Must match the <code>Ok</code> type of our <code>Serializer</code>.
    - Must match the <code>Ok</code> type of our <code>Serializer</code>.
    - Must match the <code>Ok</code> type of our <code>Serializer</code>.
    - Must match the <code>Ok</code> type of our <code>Serializer</code>.
    - Must match the <code>Ok</code> type of our <code>Serializer</code>.
    - Must match the <code>Ok</code> type of our <code>Serializer</code>.
    - Must match the <code>Ok</code> type of our <code>Serializer</code>.
    - A <strong>data structure</strong> that can be serialized into any data …
    - "Returned from <code>Serializer::serialize_map</code>."
    - Type returned from <code>serialize_map</code> for serializing the …
    - "Returned from <code>Serializer::serialize_seq</code>."
    - Type returned from <code>serialize_seq</code> for serializing the …
    - "Returned from <code>Serializer::serialize_struct</code>."
    - Type returned from <code>serialize_struct</code> for serializing the …
    - "Returned from <code>Serializer::serialize_struct_variant</code>."
    - Type returned from <code>serialize_struct_variant</code> for …
    - "Returned from <code>Serializer::serialize_tuple</code>."
    - Type returned from <code>serialize_tuple</code> for serializing the …
    - "Returned from <code>Serializer::serialize_tuple_struct</code>."
    - Type returned from <code>serialize_tuple_struct</code> for serializing …
    - "Returned from <code>Serializer::serialize_tuple_variant</code>."
    - Type returned from <code>serialize_tuple_variant</code> for serializing …
    - A <strong>data format</strong> that can serialize any data structure …
    - ""
    - ""
    - ""
    - Collect an iterator as a map.
    - Collect an iterator as a sequence.
    - Serialize a string produced by an implementation of <code>Display</code>…
    - Used when a <code>Serialize</code> implementation encounters any error …
    - Finish serializing a sequence.
    - Finish serializing a tuple.
    - Finish serializing a tuple struct.
    - Finish serializing a tuple variant.
    - Finish serializing a map.
    - Finish serializing a struct.
    - Finish serializing a struct variant.
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
    - Returns the argument unchanged.
    - "Calls <code>U::from(self)</code>."
    - Determine whether <code>Serialize</code> implementations should …
    - Serialize this value into the given Serde serializer.
    - Serialize a <code>bool</code> value.
    - Serialize a chunk of raw byte data.
    - Serialize a character.
    - Serialize a sequence element.
    - Serialize a tuple element.
    - ""
    - ""
    - Serialize a map entry consisting of a key and a value.
    - Serialize an <code>f32</code> value.
    - Serialize an <code>f64</code> value.
    - Serialize a tuple struct field.
    - Serialize a tuple variant field.
    - Serialize a struct field.
    - Serialize a struct variant field.
    - ""
    - ""
    - ""
    - ""
    - Serialize an <code>i128</code> value.
    - Serialize an <code>i16</code> value.
    - Serialize an <code>i32</code> value.
    - Serialize an <code>i64</code> value.
    - Serialize an <code>i8</code> value.
    - Serialize a map key.
    - ""
    - Begin to serialize a map. This call must be followed by …
    - Serialize a newtype struct like <code>struct Millimeters(u8)</code>.
    - "Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>."
    - Serialize a <code>None</code> value.
    - Begin to serialize a variably sized sequence. This call …
    - Serialize a <code>Some(T)</code> value.
    - Serialize a <code>&amp;str</code>.
    - Begin to serialize a struct like …
    - "Begin to serialize a struct variant like <code>E::S</code> in …"
    - Begin to serialize a statically sized sequence whose …
    - Begin to serialize a tuple struct like …
    - "Begin to serialize a tuple variant like <code>E::T</code> in …"
    - Serialize a <code>u128</code> value.
    - Serialize a <code>u16</code> value.
    - Serialize a <code>u32</code> value.
    - Serialize a <code>u64</code> value.
    - Serialize a <code>u8</code> value.
    - Serialize a <code>()</code> value.
    - Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.
    - "Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>."
    - Serialize a map value.
    - ""
    - Indicate that a struct field has been skipped.
    - Indicate that a struct variant field has been skipped.
    - ""
    - ""
    - ""
  i:
    - 0
    - 0
    - 0
    - 5
    - 11
    - 11
    - 0
    - 0
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 0
    - 11
    - 11
    - 11
    - 0
    - 33
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 0
    - 5
    - 11
    - 0
    - 0
    - 22
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 28
    - 28
    - 28
    - 0
    - 0
    - 0
    - 0
    - 79
    - 28
    - 0
    - 0
    - 5
    - 41
    - 40
    - 39
    - 80
    - 0
    - 28
    - 0
    - 0
    - 28
    - 0
    - 28
    - 28
    - 28
    - 28
    - 28
    - 0
    - 28
    - 0
    - 28
    - 28
    - 28
    - 0
    - 28
    - 28
    - 28
    - 34
    - 6
    - 39
    - 0
    - 0
    - 27
    - 28
    - 27
    - 28
    - 27
    - 28
    - 27
    - 28
    - 37
    - 27
    - 33
    - 34
    - 27
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 37
    - 28
    - 6
    - 27
    - 31
    - 31
    - 27
    - 27
    - 28
    - 28
    - 27
    - 28
    - 27
    - 28
    - 79
    - 37
    - 37
    - 37
    - 5
    - 37
    - 80
    - 80
    - 41
    - 41
    - 40
    - 40
    - 40
    - 40
    - 40
    - 40
    - 41
    - 40
    - 80
    - 27
    - 28
    - 28
    - 27
    - 28
    - 27
    - 28
    - 80
    - 27
    - 28
    - 80
    - 37
    - 37
    - 0
    - 39
    - 39
    - 6
    - 27
    - 6
    - 6
    - 6
    - 6
    - 27
    - 6
    - 6
    - 27
    - 6
    - 6
    - 27
    - 6
    - 27
    - 6
    - 6
    - 6
    - 27
    - 6
    - 6
    - 27
    - 6
    - 27
    - 6
    - 27
    - 6
    - 27
    - 6
    - 27
    - 6
    - 27
    - 6
    - 6
    - 27
    - 6
    - 6
    - 6
    - 27
    - 6
    - 6
    - 27
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 53
    - 53
    - 53
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 52
    - 69
    - 53
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 52
    - 69
    - 52
    - 52
    - 52
    - 53
    - 52
    - 52
    - 69
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 53
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 43
    - 44
    - 45
    - 46
    - 47
    - 71
    - 0
    - 11
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 0
    - 11
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 0
    - 0
    - 11
    - 0
    - 11
    - 0
    - 11
    - 0
    - 11
    - 0
    - 11
    - 0
    - 11
    - 0
    - 11
    - 0
    - 0
    - 78
    - 78
    - 11
    - 11
    - 11
    - 77
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 78
    - 78
    - 78
    - 78
    - 78
    - 78
    - 78
    - 78
    - 78
    - 11
    - 22
    - 11
    - 11
    - 11
    - 81
    - 82
    - 78
    - 78
    - 85
    - 11
    - 11
    - 83
    - 84
    - 86
    - 87
    - 78
    - 78
    - 78
    - 78
    - 11
    - 11
    - 11
    - 11
    - 11
    - 85
    - 78
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 11
    - 85
    - 78
    - 86
    - 87
    - 78
    - 78
    - 78
  p:
    - - Trait
      - IntoIterator
    - - Enum
      - Result
    - - Trait
      - Display
    - - Trait
      - Sized
    - - Trait
      - Deserializer
    - - Trait
      - Visitor
    - - Primitive
      - str
    - - Primitive
      - slice
    - - Primitive
      - usize
    - - Primitive
      - bool
    - - Trait
      - Serializer
    - - Primitive
      - u8
    - - Primitive
      - char
    - - Primitive
      - f32
    - - Primitive
      - f64
    - - Primitive
      - i128
    - - Primitive
      - i16
    - - Primitive
      - i32
    - - Primitive
      - i64
    - - Primitive
      - i8
    - - Enum
      - Option
    - - Trait
      - Serialize
    - - Primitive
      - u32
    - - Primitive
      - u128
    - - Primitive
      - u16
    - - Primitive
      - u64
    - - Struct
      - IgnoredAny
    - - Enum
      - Unexpected
    - - Struct
      - Formatter
    - - Typedef
      - Result
    - - Trait
      - Expected
    - - Struct
      - Error
    - - Trait
      - Deserialize
    - - Trait
      - DeserializeSeed
    - - Struct
      - String
    - - Struct
      - TypeId
    - - Trait
      - Error
    - - Struct
      - Vec
    - - Trait
      - EnumAccess
    - - Trait
      - MapAccess
    - - Trait
      - SeqAccess
    - - Struct
      - UnitDeserializer
    - - Struct
      - U32Deserializer
    - - Struct
      - StrDeserializer
    - - Struct
      - BorrowedStrDeserializer
    - - Struct
      - StringDeserializer
    - - Struct
      - CowStrDeserializer
    - - Struct
      - BytesDeserializer
    - - Struct
      - BorrowedBytesDeserializer
    - - Trait
      - Iterator
    - - Trait
      - Clone
    - - Struct
      - MapDeserializer
    - - Struct
      - Error
    - - Struct
      - BoolDeserializer
    - - Struct
      - I8Deserializer
    - - Struct
      - I16Deserializer
    - - Struct
      - I32Deserializer
    - - Struct
      - I64Deserializer
    - - Struct
      - IsizeDeserializer
    - - Struct
      - U8Deserializer
    - - Struct
      - U16Deserializer
    - - Struct
      - U64Deserializer
    - - Struct
      - UsizeDeserializer
    - - Struct
      - F32Deserializer
    - - Struct
      - F64Deserializer
    - - Struct
      - CharDeserializer
    - - Struct
      - I128Deserializer
    - - Struct
      - U128Deserializer
    - - Struct
      - SeqDeserializer
    - - Struct
      - SeqAccessDeserializer
    - - Struct
      - MapAccessDeserializer
    - - Struct
      - EnumAccessDeserializer
    - - Trait
      - Debug
    - - Enum
      - Cow
    - - Primitive
      - isize
    - - Struct
      - Demand
    - - Trait
      - Error
    - - Struct
      - Impossible
    - - Trait
      - IntoDeserializer
    - - Trait
      - VariantAccess
    - - Trait
      - SerializeSeq
    - - Trait
      - SerializeTuple
    - - Trait
      - SerializeTupleStruct
    - - Trait
      - SerializeTupleVariant
    - - Trait
      - SerializeMap
    - - Trait
      - SerializeStruct
    - - Trait
      - SerializeStructVariant

